#!/usr/bin/env node

var fs  = require('fs'),
mesh    = require('../'),
celeri  = require('celeri'),
outcome = require('outcome'),
mesher  = mesh.mesher(),
colors  = require('colors');


var onCmdResult = outcome.error(function(err) {
	
	console.error(err);

});


var replaceCwd = function(dir) {
	
	return dir.replace(/^\./, process.cwd() + '/.');

}


/**
 */

celeri.option({
	command: 'merge :platform',
	description: 'Merges a library for a particular platform',
	optional: {
		'--dir': 'The directory to use scan',
		'--out': 'the output directory'
	}
}, function(ops, next) {

	var input = this._input  = replaceCwd(ops.dir || './src'),
	output    = this._output = replaceCwd(ops.out || input + '/../mesh-lib') + '/' + ops.platform,
	platform  = ops.platform;

	console.log('Merging %s to %s', input.bold, platform.bold);


	mesher.merge({
		input: input,
		output: output,
		include: platform
	}, onCmdResult.success(next));
});

/**
 */

celeri.option({
	command: 'merge :platform -> make :platform',
	description: 'Makes the cwd lib for the target platform',
	optional: {
		'--dir': 'The directory to use scan',
		'--out': 'the output directory'
	}
}, function(ops) {

	mesher.make({
		input  : this._input,
		output : this._output,
		include: this._platform
	}, onCmdResult);

});


celeri.parse(process.argv);




