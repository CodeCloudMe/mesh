#!/usr/bin/env node

var cli = require('optimist').
usage("Usage: $0 [targets] -i=[target] --arg=[value]").
alias('i','input').
default('i',"./package.json"),
argv = cli.argv,
capirona = require('capirona'),
path     = require('path'),
step     = require('stepc'),
outcome  = require('outcome'),
fs       = require('fs');

if(argv.h || argv.help) {
	cli.showHelp();
	process.exit();
}

var makeTarget = (argv.i).
replace('~', process.env.HOME).
replace('./', process.cwd() + "/");


argv.cwd          = path.dirname(makeTarget);


var on = outcome.error(function(e) {
	
	console.error(e.message);

});

step(

	/**
	 */

	function() {

		path.exists(makeTarget, this);

	},

	/**
	 */

	function(exists) {

		if(exists) {

			fs.readFile(makeTarget, "utf8", this);

		} else {

			this();

		}
	},

	/**
	 */

	on.success(function(content) {

		if(!content) return this(null, { mesh: {} });
		this(null, JSON.parse(content));

	}),

	/**
	 */

	on.success(function(pkg) {


		capirona.
		make().
		load(__dirname + "/../default/config.json").
		cwd(argv.cwd).
		load(pkg).
		run(argv._, argv, this);

	}),

	/**
	 */

	on.success(function() {

		console.log('done without errors');

	})
)

