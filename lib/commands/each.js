// Generated by CoffeeScript 1.6.2
(function() {
  var async, flatstack, outcome, run, type;

  async = require("async");

  type = require("type-component");

  flatstack = require("flatstack");

  outcome = require("outcome");

  /*
  
  each:
    source: [1, 2, 3, 4, 5]
    sum: 0
    as: "number"
    run: (context) ->
      context.set("sum", context.get("sum") + context.get("number"))
  */


  run = function(context, next) {
    var as, callstack, o, source,
      _this = this;

    as = context.get("as") || "value";
    source = context.get("source");
    run = context.get("run");
    o = outcome.e(next);
    callstack = flatstack();
    callstack.push(function(nex) {
      if (type(source) !== "function") {
        return next();
      }
      if (source.length === 2) {
        return source.call(_this, context, o.s(function(src) {
          source = src;
          return nex();
        }));
      } else {
        source = source.call(_this, context);
        return nex();
      }
    });
    callstack.push(function(next) {
      return async.eachSeries(source, (function(item, next) {
        var data;

        data = {};
        data[as] = item;
        return _this.run(run, context.child(data), next);
      }), o.s(next));
    });
    return callstack.push(next);
  };

  module.exports = {
    "def each": {
      "run": run
    }
  };

}).call(this);
